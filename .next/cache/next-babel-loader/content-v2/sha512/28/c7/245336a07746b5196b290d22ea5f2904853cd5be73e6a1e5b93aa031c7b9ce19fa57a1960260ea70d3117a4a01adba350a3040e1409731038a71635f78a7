{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\React\\\\NodeSend\\\\client\\\\context\\\\auth\\\\authState.js\";\nimport React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport { USUARIO_AUTENTICADO } from '../../types/index';\nimport clientAxios from '../../config/axios';\n\nconst AuthState = ({\n  children\n}) => {\n  //Definir state inicial\n  const initialState = {\n    token: '',\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  }; //Definir el reducer\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(authReducer, initialState); // Registrar usuario\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clientAxios.post('/api/users', datos);\n      console.log(respuesta.config.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Usuario autenticado\n\n\n  const usuarioAutenticado = nombre => {\n    dispatch({\n      type: USUARIO_AUTENTICADO,\n      payload: nombre\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      usuarioAutenticado,\n      registrarUsuario\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Boris/Desktop/React/NodeSend/client/context/auth/authState.js"],"names":["React","useReducer","authContext","authReducer","USUARIO_AUTENTICADO","clientAxios","AuthState","children","initialState","token","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","respuesta","post","console","log","config","data","error","usuarioAutenticado","nombre","type","payload"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAEhC;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,WAAW,EAAE,IAFI;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB,CAHgC,CAUhC;;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBb,UAAU,CAACE,WAAD,EAAcK,YAAd,CAApC,CAXgC,CAahC;;AACA,QAAMO,gBAAgB,GAAG,MAAMC,KAAN,IAAe;AAEpC,QAAI;AACA,YAAMC,SAAS,GAAG,MAAMZ,WAAW,CAACa,IAAZ,CAAiB,YAAjB,EAA+BF,KAA/B,CAAxB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,MAAV,CAAiBC,IAA7B;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,GARD,CAdgC,CAuBhC;;;AAEA,QAAMC,kBAAkB,GAAGC,MAAM,IAAI;AACjCX,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEtB,mBADD;AAELuB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHhB,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADV;AAEHC,MAAAA,WAAW,EAAEG,KAAK,CAACH,WAFhB;AAGHC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAHZ;AAIHC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJZ;AAKHY,MAAAA,kBALG;AAMHT,MAAAA;AANG,KADX;AAAA,cAUKR;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA9CD;;AAgDA,eAAeD,SAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport authContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport { USUARIO_AUTENTICADO } from '../../types/index';\r\nimport clientAxios from '../../config/axios';\r\n\r\nconst AuthState = ({ children }) => {\r\n\r\n    //Definir state inicial\r\n    const initialState = {\r\n        token: '',\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null\r\n    }\r\n\r\n    //Definir el reducer\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    // Registrar usuario\r\n    const registrarUsuario = async datos => {\r\n        \r\n        try {\r\n            const respuesta = await clientAxios.post('/api/users', datos);\r\n            console.log(respuesta.config.data);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    // Usuario autenticado\r\n\r\n    const usuarioAutenticado = nombre => {\r\n        dispatch({\r\n            type: USUARIO_AUTENTICADO,\r\n            payload: nombre\r\n        })\r\n    }\r\n\r\n    return (\r\n        <authContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                usuarioAutenticado,\r\n                registrarUsuario\r\n            }}\r\n        >\r\n            {children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}