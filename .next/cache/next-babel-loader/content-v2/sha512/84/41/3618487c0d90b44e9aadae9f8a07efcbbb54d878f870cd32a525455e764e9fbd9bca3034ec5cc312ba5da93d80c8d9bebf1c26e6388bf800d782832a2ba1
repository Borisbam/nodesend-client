{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\React\\\\NodeSend\\\\client\\\\context\\\\auth\\\\authState.js\";\nimport React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, LIMPIAR_ALERTA, LOGIN_ERROR } from '../../types/index';\nimport clientAxios from '../../config/axios';\n\nconst AuthState = ({\n  children\n}) => {\n  //Definir state inicial\n  const initialState = {\n    token: '',\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  }; //Definir el reducer\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(authReducer, initialState); // Registrar usuario\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clientAxios.post('/api/users', datos);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data.msg\n      });\n      limpiarAlerta();\n    } catch (error) {\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: error.response.data.msg\n      });\n      limpiarAlerta();\n    }\n  }; //Iniciar Sesión\n\n\n  const iniciarSesion = async datos => {\n    try {\n      const respuesta = await clientAxios.post('api/auth', datos);\n      limpiarAlerta();\n    } catch (error) {\n      console.log(error.response.data.msg);\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: error.response.data.msg\n      });\n      limpiarAlerta();\n    }\n  }; // Usuario autenticado\n\n\n  const usuarioAutenticado = nombre => {\n    dispatch({\n      type: USUARIO_AUTENTICADO,\n      payload: nombre\n    });\n  }; // Limpiar alerta\n\n\n  const limpiarAlerta = () => {\n    setTimeout(() => {\n      dispatch({\n        type: LIMPIAR_ALERTA,\n        payload: null\n      });\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      usuarioAutenticado,\n      registrarUsuario,\n      iniciarSesion,\n      limpiarAlerta\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Boris/Desktop/React/NodeSend/client/context/auth/authState.js"],"names":["React","useReducer","authContext","authReducer","REGISTRO_EXITOSO","REGISTRO_ERROR","LIMPIAR_ALERTA","LOGIN_ERROR","clientAxios","AuthState","children","initialState","token","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","respuesta","post","type","payload","data","msg","limpiarAlerta","error","response","iniciarSesion","console","log","usuarioAutenticado","nombre","USUARIO_AUTENTICADO","setTimeout"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport authContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    LIMPIAR_ALERTA,\r\n    LOGIN_ERROR\r\n} from '../../types/index';\r\nimport clientAxios from '../../config/axios';\r\n\r\nconst AuthState = ({ children }) => {\r\n\r\n    //Definir state inicial\r\n    const initialState = {\r\n        token: '',\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null\r\n    }\r\n\r\n    //Definir el reducer\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    // Registrar usuario\r\n    const registrarUsuario = async datos => {\r\n\r\n        try {\r\n            const respuesta = await clientAxios.post('/api/users', datos);\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data.msg\r\n            })\r\n            limpiarAlerta();\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: error.response.data.msg\r\n            })\r\n            limpiarAlerta();\r\n\r\n        }\r\n    }\r\n\r\n    //Iniciar Sesión\r\n    const iniciarSesion = async datos => {\r\n        \r\n        try {\r\n            const respuesta = await clientAxios.post('api/auth', datos);\r\n            limpiarAlerta();\r\n        } catch (error) {\r\n            console.log(error.response.data.msg)\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: error.response.data.msg\r\n            });\r\n            limpiarAlerta();\r\n        }\r\n    }\r\n    // Usuario autenticado\r\n\r\n    const usuarioAutenticado = nombre => {\r\n        dispatch({\r\n            type: USUARIO_AUTENTICADO,\r\n            payload: nombre\r\n        })\r\n    }\r\n\r\n    // Limpiar alerta\r\n    const limpiarAlerta = () => {\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: LIMPIAR_ALERTA,\r\n                payload: null\r\n            })\r\n        }, 3000);\r\n    }\r\n\r\n    return (\r\n        <authContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                usuarioAutenticado,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n                limpiarAlerta\r\n            }}\r\n        >\r\n            {children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}