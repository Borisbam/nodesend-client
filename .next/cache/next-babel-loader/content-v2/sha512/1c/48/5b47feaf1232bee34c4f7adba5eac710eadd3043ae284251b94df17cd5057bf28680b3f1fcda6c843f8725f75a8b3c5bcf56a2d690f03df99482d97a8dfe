{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\React\\\\NodeSend\\\\client\\\\context\\\\app\\\\appState.js\";\nimport React, { useReducer } from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport clientAxios from '../../config/axios';\nimport { MOSTRAR_ALERTA, LIMPIAR_ALERTA, SUBIR_ARCHIVO_EXITO, SUBIR_ARCHIVO_ERROR, CREAR_ENLACE_EXITO, CREAR_ENLACE_ERROR } from '../../types/index';\n\nconst AppState = ({\n  children\n}) => {\n  const initialState = {\n    mensaje_archivo: '',\n    nombre: '',\n    nombre_original: ''\n  }; // Crear dispatch y state\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(appReducer, initialState); // Mostrar alerta\n\n  const mostrarAlerta = msg => {\n    dispatch({\n      type: MOSTRAR_ALERTA,\n      payload: msg\n    });\n    setTimeout(() => {\n      dispatch({\n        type: LIMPIAR_ALERTA\n      });\n    }, 3000);\n  }; //Subir archivos al servidor\n\n\n  const subirArchivo = async (formData, nombreArchivo) => {\n    try {\n      const respuesta = await clientAxios.post('/api/files', formData);\n      console.log(respuesta);\n      dispatch({\n        type: SUBIR_ARCHIVO_EXITO,\n        payload: {\n          nombre: respuesta.data.file,\n          nombre_original: nombreArchivo\n        }\n      });\n      console.log(respuesta.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(appContext.Provider, {\n    value: {\n      mensaje_archivo: state.mensaje_archivo,\n      nombre: state.nombre,\n      nombre_original: state.nombre_original,\n      mostrarAlerta,\n      subirArchivo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\nexport default AppState;","map":{"version":3,"sources":["C:/Users/Boris/Desktop/React/NodeSend/client/context/app/appState.js"],"names":["React","useReducer","appContext","appReducer","clientAxios","MOSTRAR_ALERTA","LIMPIAR_ALERTA","SUBIR_ARCHIVO_EXITO","SUBIR_ARCHIVO_ERROR","CREAR_ENLACE_EXITO","CREAR_ENLACE_ERROR","AppState","children","initialState","mensaje_archivo","nombre","nombre_original","state","dispatch","mostrarAlerta","msg","type","payload","setTimeout","subirArchivo","formData","nombreArchivo","respuesta","post","console","log","data","file","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,mBAHJ,EAIIC,mBAJJ,EAKIC,kBALJ,EAMIC,kBANJ,QAOO,mBAPP;;AASA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE/B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,eAAe,EAAE,EADA;AAEjBC,IAAAA,MAAM,EAAE,EAFS;AAGjBC,IAAAA,eAAe,EAAE;AAHA,GAArB,CAF+B,CAQ/B;;AAEA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBjB,UAAU,CAACE,UAAD,EAAaU,YAAb,CAApC,CAV+B,CAY/B;;AAEA,QAAMM,aAAa,GAAGC,GAAG,IAAI;AAEzBF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEhB,cADD;AAELiB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,UAAU,CAAC,MAAM;AACbL,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEf;AAAR,OAAD,CAAR;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAVD,CAd+B,CA0B/B;;;AAEA,QAAMkB,YAAY,GAAG,OAAOC,QAAP,EAAiBC,aAAjB,KAAmC;AAEpD,QAAI;AACA,YAAMC,SAAS,GAAG,MAAMvB,WAAW,CAACwB,IAAZ,CAAiB,YAAjB,EAA+BH,QAA/B,CAAxB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAT,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEd,mBADD;AAELe,QAAAA,OAAO,EAAE;AACLP,UAAAA,MAAM,EAAEY,SAAS,CAACI,IAAV,CAAeC,IADlB;AAELhB,UAAAA,eAAe,EAAEU;AAFZ;AAFJ,OAAD,CAAR;AAOAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,IAAtB;AACH,KAXD,CAWE,OAAOE,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,GAhBD;;AAkBA,sBACI,QAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAE;AACHnB,MAAAA,eAAe,EAAEG,KAAK,CAACH,eADpB;AAEHC,MAAAA,MAAM,EAAEE,KAAK,CAACF,MAFX;AAGHC,MAAAA,eAAe,EAAEC,KAAK,CAACD,eAHpB;AAIHG,MAAAA,aAJG;AAKHK,MAAAA;AALG,KADX;AAAA,cASKZ;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA3DD;;AA6DA,eAAeD,QAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport appContext from './appContext';\r\nimport appReducer from './appReducer';\r\nimport clientAxios from '../../config/axios';\r\n\r\nimport {\r\n    MOSTRAR_ALERTA,\r\n    LIMPIAR_ALERTA,\r\n    SUBIR_ARCHIVO_EXITO,\r\n    SUBIR_ARCHIVO_ERROR,\r\n    CREAR_ENLACE_EXITO,\r\n    CREAR_ENLACE_ERROR\r\n} from '../../types/index';\r\n\r\nconst AppState = ({ children }) => {\r\n\r\n    const initialState = {\r\n        mensaje_archivo: '',\r\n        nombre: '',\r\n        nombre_original: ''\r\n    }\r\n\r\n    // Crear dispatch y state\r\n\r\n    const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n    // Mostrar alerta\r\n\r\n    const mostrarAlerta = msg => {\r\n\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: msg\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({ type: LIMPIAR_ALERTA })\r\n        }, 3000);\r\n    }\r\n\r\n    //Subir archivos al servidor\r\n\r\n    const subirArchivo = async (formData, nombreArchivo) => {\r\n\r\n        try {\r\n            const respuesta = await clientAxios.post('/api/files', formData);\r\n            console.log(respuesta)\r\n            dispatch({\r\n                type: SUBIR_ARCHIVO_EXITO,\r\n                payload: {\r\n                    nombre: respuesta.data.file,\r\n                    nombre_original: nombreArchivo\r\n                }\r\n            })\r\n            console.log(respuesta.data);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <appContext.Provider\r\n            value={{\r\n                mensaje_archivo: state.mensaje_archivo,\r\n                nombre: state.nombre,\r\n                nombre_original: state.nombre_original,\r\n                mostrarAlerta,\r\n                subirArchivo\r\n            }}\r\n        >\r\n            {children}\r\n        </appContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppState;"]},"metadata":{},"sourceType":"module"}