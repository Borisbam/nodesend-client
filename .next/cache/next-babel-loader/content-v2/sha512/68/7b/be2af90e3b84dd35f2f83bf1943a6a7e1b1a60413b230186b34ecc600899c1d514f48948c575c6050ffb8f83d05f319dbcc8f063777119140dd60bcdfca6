{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\React\\\\NodeSend\\\\client\\\\context\\\\app\\\\appState.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport { MOSTRAR_ALERTA, LIMPIAR_ALERTA, SUBIR_ARCHIVO_EXITO, SUBIR_ARCHIVO_ERROR, CREAR_ENLACE_EXITO, CREAR_ENLACE_ERROR } from '../../types/index';\n\nvar AppState = function AppState(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var initialState = {\n    mensaje_archivo: ''\n  }; // Crear dispatch y state\n\n  var _useReducer = useReducer(appReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Mostrar alerta\n\n\n  var mostrarAlerta = function mostrarAlerta(msg) {\n    dispatch({\n      type: MOSTRAR_ALERTA,\n      payload: msg\n    });\n    setTimeout(function () {\n      dispatch({\n        type: LIMPIAR_ALERTA\n      });\n    }, 3000);\n  }; //Subir archivos al servidor\n\n\n  var subirArchivo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var resultado;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return clientAxios.post('/api/files', formData);\n\n            case 3:\n              resultado = _context.sent;\n              console.log(resultado.data);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function subirArchivo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(appContext.Provider, {\n    value: {\n      mensaje_archivo: state.mensaje_archivo,\n      mostrarAlerta: mostrarAlerta,\n      subirArchivo: subirArchivo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AppState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AppState;\nexport default AppState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppState\");","map":{"version":3,"sources":["C:/Users/Boris/Desktop/React/NodeSend/client/context/app/appState.js"],"names":["React","useReducer","appContext","appReducer","MOSTRAR_ALERTA","LIMPIAR_ALERTA","SUBIR_ARCHIVO_EXITO","SUBIR_ARCHIVO_ERROR","CREAR_ENLACE_EXITO","CREAR_ENLACE_ERROR","AppState","children","initialState","mensaje_archivo","state","dispatch","mostrarAlerta","msg","type","payload","setTimeout","subirArchivo","clientAxios","post","formData","resultado","console","log","data"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,mBAHJ,EAIIC,mBAJJ,EAKIC,kBALJ,EAMIC,kBANJ,QAOO,mBAPP;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAE/B,MAAMC,YAAY,GAAG;AACjBC,IAAAA,eAAe,EAAE;AADA,GAArB,CAF+B,CAM/B;;AAN+B,oBAQLZ,UAAU,CAACE,UAAD,EAAaS,YAAb,CARL;AAAA,MAQxBE,KARwB;AAAA,MAQjBC,QARiB,mBAU/B;;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG,EAAI;AAEzBF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEd,cADD;AAELe,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,UAAU,CAAC,YAAM;AACbL,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEb;AAAR,OAAD,CAAR;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAVD,CAZ+B,CAwB/B;;;AAEA,MAAMgB,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGWC,WAAW,CAACC,IAAZ,CAAiB,YAAjB,EAA+BC,QAA/B,CAHX;;AAAA;AAGPC,cAAAA,SAHO;AAIbC,cAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,IAAtB;AAJa;AAAA;;AAAA;AAAA;AAAA;AAMbF,cAAAA,OAAO,CAACC,GAAR;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZN,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAUA,sBACI,QAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAE;AACHR,MAAAA,eAAe,EAAEC,KAAK,CAACD,eADpB;AAEHG,MAAAA,aAAa,EAAbA,aAFG;AAGHK,MAAAA,YAAY,EAAZA;AAHG,KADX;AAAA,cAOKV;AAPL;AAAA;AAAA;AAAA;AAAA,WADJ;AAWH,CA/CD;;GAAMD,Q;;KAAAA,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport appContext from './appContext';\r\nimport appReducer from './appReducer';\r\nimport {\r\n    MOSTRAR_ALERTA,\r\n    LIMPIAR_ALERTA,\r\n    SUBIR_ARCHIVO_EXITO,\r\n    SUBIR_ARCHIVO_ERROR,\r\n    CREAR_ENLACE_EXITO,\r\n    CREAR_ENLACE_ERROR\r\n} from '../../types/index';\r\n\r\nconst AppState = ({ children }) => {\r\n\r\n    const initialState = {\r\n        mensaje_archivo: ''\r\n    }\r\n\r\n    // Crear dispatch y state\r\n\r\n    const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n    // Mostrar alerta\r\n\r\n    const mostrarAlerta = msg => {\r\n\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: msg\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({ type: LIMPIAR_ALERTA })\r\n        }, 3000);\r\n    }\r\n\r\n    //Subir archivos al servidor\r\n\r\n    const subirArchivo = async () => {\r\n\r\n        try {\r\n            const resultado = await clientAxios.post('/api/files', formData);\r\n            console.log(resultado.data);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <appContext.Provider\r\n            value={{\r\n                mensaje_archivo: state.mensaje_archivo,\r\n                mostrarAlerta,\r\n                subirArchivo\r\n            }}\r\n        >\r\n            {children}\r\n        </appContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppState;"]},"metadata":{},"sourceType":"module"}