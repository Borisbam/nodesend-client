{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\React\\\\NodeSend\\\\client\\\\context\\\\auth\\\\authState.js\";\nimport React, { useReducer, useEffect, useRef } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, LIMPIAR_ALERTA, LOGIN_ERROR, MENSAJE_NULL, LOGIN_EXITOSO } from '../../types/index';\nimport clientAxios from '../../config/axios';\n\nconst AuthState = ({\n  children\n}) => {\n  //Definir state inicial\n  const initialState = {\n    token: false ? localStorage.getItem('token') : null,\n    autenticado: false ? localStorage.getItem('autenticado') : null,\n    usuario: null,\n    mensaje: null\n  }; //Definir el reducer\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(authReducer, initialState); // Registrar usuario\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clientAxios.post('/api/users', datos);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data.msg\n      });\n    } catch (error) {\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: error.response.data.msg\n      });\n    }\n  };\n\n  const limpiarAlerta = () => {\n    let timerId = null;\n\n    const printHolaTimer = () => {\n      const clearAndPrint = () => {\n        if (!timerId) {\n          setTimeout(() => console.log('1'), 1000);\n          setTimeout(() => console.log('2'), 2000);\n          setTimeout(() => console.log('3'), 3000);\n          setTimeout(() => console.log('4'), 4000);\n          setTimeout(() => console.log('5'), 5000);\n        } else {\n          clearTimeout(timerId);\n          timerId = printHolaTimer();\n        }\n      };\n\n      clearAndPrint();\n    };\n  }; //Iniciar Sesión\n\n\n  const iniciarSesion = async datos => {\n    try {\n      const respuesta = await clientAxios.post('api/auth', datos);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data.token\n      });\n      localStorage.setItem('token', state.token);\n      localStorage.setItem('autenticado', state.autenticado);\n    } catch (error) {\n      console.log(error.response.data.msg);\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: error.response.data.msg\n      });\n    }\n\n    limpiarAlerta();\n  }; // Limpiar alerta\n  // const isMounted = useRef(false);\n  // useEffect(() => {\n  //     if (isMounted.current) {\n  //         const close = () => setTimeout(() => dispatch({ type: LIMPIAR_ALERTA }), 3000);\n  //         const timerId = close();\n  //         return () => {\n  //             clearTimeout(timerId);\n  //         };\n  //     } else {\n  //         isMounted.current = true;\n  //     }\n  // }, [state.mensaje]);\n  // Usuario autenticado\n\n\n  const usuarioAutenticado = nombre => {\n    dispatch({\n      type: USUARIO_AUTENTICADO,\n      payload: nombre\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      usuarioAutenticado,\n      registrarUsuario,\n      iniciarSesion\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Boris/Desktop/React/NodeSend/client/context/auth/authState.js"],"names":["React","useReducer","useEffect","useRef","authContext","authReducer","REGISTRO_EXITOSO","REGISTRO_ERROR","LIMPIAR_ALERTA","LOGIN_ERROR","MENSAJE_NULL","LOGIN_EXITOSO","clientAxios","AuthState","children","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","respuesta","post","type","payload","data","msg","error","response","limpiarAlerta","timerId","printHolaTimer","clearAndPrint","setTimeout","console","log","clearTimeout","iniciarSesion","setItem","usuarioAutenticado","nombre","USUARIO_AUTENTICADO"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useRef } from 'react';\r\nimport authContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    LIMPIAR_ALERTA,\r\n    LOGIN_ERROR,\r\n    MENSAJE_NULL,\r\n    LOGIN_EXITOSO\r\n} from '../../types/index';\r\nimport clientAxios from '../../config/axios';\r\n\r\nconst AuthState = ({ children }) => {\r\n\r\n    //Definir state inicial\r\n    const initialState = {\r\n        token: typeof window !== 'undefined' ? localStorage.getItem('token') : null,\r\n        autenticado: typeof window !== 'undefined' ? localStorage.getItem('autenticado') : null,\r\n        usuario: null,\r\n        mensaje: null\r\n    }\r\n\r\n    //Definir el reducer\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    // Registrar usuario\r\n    const registrarUsuario = async datos => {\r\n\r\n        try {\r\n            const respuesta = await clientAxios.post('/api/users', datos);\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data.msg\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: error.response.data.msg\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n    const limpiarAlerta = () => {\r\n\r\n\r\n        let timerId = null;\r\n\r\n        const printHolaTimer = () => {\r\n\r\n            const clearAndPrint = () => {\r\n                if (!timerId) {\r\n                    setTimeout(() => console.log('1'), 1000);\r\n                    setTimeout(() => console.log('2'), 2000);\r\n                    setTimeout(() => console.log('3'), 3000);\r\n                    setTimeout(() => console.log('4'), 4000);\r\n                    setTimeout(() => console.log('5'), 5000);\r\n\r\n                } else {\r\n                    clearTimeout(timerId);\r\n                    timerId = printHolaTimer();\r\n                }\r\n                \r\n            }\r\n\r\n            clearAndPrint();\r\n        }\r\n    }\r\n\r\n    //Iniciar Sesión\r\n    const iniciarSesion = async datos => {\r\n\r\n        try {\r\n            const respuesta = await clientAxios.post('api/auth', datos);\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: respuesta.data.token\r\n            });\r\n            localStorage.setItem('token', state.token);\r\n            localStorage.setItem('autenticado', state.autenticado)\r\n        } catch (error) {\r\n            console.log(error.response.data.msg)\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: error.response.data.msg\r\n            })\r\n        }\r\n\r\n        limpiarAlerta();\r\n\r\n    }\r\n\r\n\r\n\r\n    // Limpiar alerta\r\n    // const isMounted = useRef(false);\r\n\r\n    // useEffect(() => {\r\n    //     if (isMounted.current) {\r\n    //         const close = () => setTimeout(() => dispatch({ type: LIMPIAR_ALERTA }), 3000);\r\n\r\n    //         const timerId = close();\r\n    //         return () => {\r\n    //             clearTimeout(timerId);\r\n    //         };\r\n    //     } else {\r\n    //         isMounted.current = true;\r\n    //     }\r\n    // }, [state.mensaje]);\r\n\r\n    // Usuario autenticado\r\n\r\n    const usuarioAutenticado = nombre => {\r\n        dispatch({\r\n            type: USUARIO_AUTENTICADO,\r\n            payload: nombre\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <authContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                usuarioAutenticado,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n\r\n            }}\r\n        >\r\n            {children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}