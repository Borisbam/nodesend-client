{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\React\\\\NodeSend\\\\client\\\\context\\\\auth\\\\authState.js\";\nimport React, { useReducer, useEffect, useRef } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, LIMPIAR_ALERTA, LOGIN_ERROR, MENSAJE_NULL, LOGIN_EXITOSO } from '../../types/index';\nimport clientAxios from '../../config/axios';\nimport tokenAuth from '../../config/tokenAuth';\n\nconst AuthState = ({\n  children\n}) => {\n  //Definir state inicial\n  const initialState = {\n    token: false ? localStorage.getItem('token') : null,\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  }; //Definir el reducer\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(authReducer, initialState); // Registrar usuario\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clientAxios.post('/api/users', datos);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data.msg\n      });\n    } catch (error) {\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: error.response.data.msg\n      });\n    }\n  }; //Iniciar Sesión\n\n\n  const iniciarSesion = async datos => {\n    try {\n      const respuesta = await clientAxios.post('api/auth', datos);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data.token\n      });\n      localStorage.setItem('token', state.token);\n      localStorage.setItem('autenticado', state.autenticado);\n    } catch (error) {\n      console.log(error.response.data.msg);\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: error.response.data.msg\n      });\n    }\n  }; // Limpiar alerta\n\n\n  const isMounted = useRef(false);\n  useEffect(() => {\n    if (isMounted.current) {\n      const close = () => setTimeout(() => dispatch({\n        type: LIMPIAR_ALERTA\n      }), 3000);\n\n      const timerId = close();\n      return () => {\n        clearTimeout(timerId);\n      };\n    } else {\n      isMounted.current = true;\n    }\n  }, [state.mensaje]); // Retorna el usuario autenticado en base al JWT\n  // const usuarioAutenticado = async () => {\n  //     const token = localStorage.getItem('token');\n  //     if(token) {\n  //         tokenAuth(token);\n  //     }\n  //     try {\n  //         const respuesta = await clientAxios.get('/api/auth');\n  //         console.log(respuesta);\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registrarUsuario,\n      iniciarSesion,\n      usuarioAutenticado\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Boris/Desktop/React/NodeSend/client/context/auth/authState.js"],"names":["React","useReducer","useEffect","useRef","authContext","authReducer","REGISTRO_EXITOSO","REGISTRO_ERROR","LIMPIAR_ALERTA","LOGIN_ERROR","MENSAJE_NULL","LOGIN_EXITOSO","clientAxios","tokenAuth","AuthState","children","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","respuesta","post","type","payload","data","msg","error","response","iniciarSesion","setItem","console","log","isMounted","current","close","setTimeout","timerId","clearTimeout","usuarioAutenticado"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useRef } from 'react';\r\nimport authContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    LIMPIAR_ALERTA,\r\n    LOGIN_ERROR,\r\n    MENSAJE_NULL,\r\n    LOGIN_EXITOSO\r\n} from '../../types/index';\r\nimport clientAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/tokenAuth';\r\n\r\nconst AuthState = ({ children }) => {\r\n\r\n    //Definir state inicial\r\n    const initialState = {\r\n        token: typeof window !== 'undefined' ? localStorage.getItem('token') : null,\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null\r\n    }\r\n\r\n    //Definir el reducer\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    // Registrar usuario\r\n    const registrarUsuario = async datos => {\r\n\r\n        try {\r\n            const respuesta = await clientAxios.post('/api/users', datos);\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data.msg\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: error.response.data.msg\r\n            })\r\n        }\r\n    }    \r\n\r\n    //Iniciar Sesión\r\n    const iniciarSesion = async datos => {\r\n\r\n        try {\r\n            const respuesta = await clientAxios.post('api/auth', datos);\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: respuesta.data.token\r\n            });\r\n            localStorage.setItem('token', state.token);\r\n            localStorage.setItem('autenticado', state.autenticado)\r\n        } catch (error) {\r\n            console.log(error.response.data.msg)\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: error.response.data.msg\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // Limpiar alerta\r\n    const isMounted = useRef(false);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            const close = () => setTimeout(() => dispatch({ type: LIMPIAR_ALERTA }), 3000);\r\n\r\n            const timerId = close();\r\n            return () => {\r\n                clearTimeout(timerId);\r\n            };\r\n        } else {\r\n            isMounted.current = true;\r\n        }\r\n    }, [state.mensaje]);\r\n\r\n\r\n    // Retorna el usuario autenticado en base al JWT\r\n    // const usuarioAutenticado = async () => {\r\n    //     const token = localStorage.getItem('token');\r\n    //     if(token) {\r\n    //         tokenAuth(token);\r\n    //     }\r\n\r\n    //     try {\r\n    //         const respuesta = await clientAxios.get('/api/auth');\r\n    //         console.log(respuesta);\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <authContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n                usuarioAutenticado\r\n\r\n            }}\r\n        >\r\n            {children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}