{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useReducer } from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport clientAxios from '../../config/axios';\nimport { MOSTRAR_ALERTA, LIMPIAR_ALERTA, SUBIENDO_ARCHIVO, SUBIR_ARCHIVO_EXITO, SUBIR_ARCHIVO_ERROR, CREAR_ENLACE_EXITO, AGREGAR_PASSWORD, LIMPIAR_STATE, AGREGAR_DESCARGAS, VISTA_IMAGEN } from '../../types/index';\n\nconst AppState = ({\n  children\n}) => {\n  const initialState = {\n    mensaje_archivo: '',\n    nombre: '',\n    nombre_original: '',\n    cargando: false,\n    descargas: 1,\n    password: '',\n    autor: null,\n    url: '',\n    image: null\n  }; // Crear dispatch y state\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(appReducer, initialState); // Mostrar alerta\n\n  const mostrarAlerta = msg => {\n    dispatch({\n      type: MOSTRAR_ALERTA,\n      payload: msg\n    });\n    setTimeout(() => {\n      dispatch({\n        type: LIMPIAR_ALERTA\n      });\n    }, 3000);\n  }; //Subir archivos al servidor\n\n\n  const subirArchivo = (formData, nombreArchivo) => {\n    dispatch({\n      type: SUBIENDO_ARCHIVO\n    });\n    setTimeout(async () => {\n      try {\n        const respuesta = await clientAxios.post('/api/files', formData);\n        dispatch({\n          type: SUBIR_ARCHIVO_EXITO,\n          payload: {\n            nombre: respuesta.data.archivo,\n            nombre_original: nombreArchivo,\n            image: respuesta.data.image\n          }\n        });\n      } catch (error) {\n        dispatch({\n          type: SUBIR_ARCHIVO_ERROR,\n          payload: error.response.data.msg\n        });\n      }\n    }, 2000);\n  };\n\n  const crearEnlace = async () => {\n    const data = {\n      name: state.nombre,\n      original_name: state.nombre_original,\n      downloads: state.descargas,\n      password: state.password,\n      author: state.autor,\n      image: state.image\n    };\n\n    try {\n      const resultado = await clientAxios.post('/api/links', data);\n      dispatch({\n        type: CREAR_ENLACE_EXITO,\n        payload: resultado.data.msg\n      });\n    } catch (error) {}\n  };\n\n  const limpiarState = () => {\n    dispatch({\n      type: LIMPIAR_STATE\n    });\n  }; // Agregar password\n\n\n  const agregarPassword = password => {\n    dispatch({\n      type: AGREGAR_PASSWORD,\n      payload: password\n    });\n  }; // Agregar descargas\n\n\n  const agregarDescargas = descargas => {\n    dispatch({\n      type: AGREGAR_DESCARGAS,\n      payload: descargas\n    });\n  };\n\n  const agregarImagen = imagen => {\n    dispatch({\n      type: VISTA_IMAGEN,\n      payload: URL.createObjectURL(imagen)\n    });\n  };\n\n  return /*#__PURE__*/_jsx(appContext.Provider, {\n    value: {\n      mensaje_archivo: state.mensaje_archivo,\n      nombre: state.nombre,\n      nombre_original: state.nombre_original,\n      cargando: state.cargando,\n      descargas: state.descargas,\n      password: state.password,\n      autor: state.autor,\n      url: state.url,\n      image: state.image,\n      mostrarAlerta,\n      subirArchivo,\n      crearEnlace,\n      limpiarState,\n      agregarPassword,\n      agregarDescargas,\n      agregarImagen\n    },\n    children: children\n  });\n};\n\nexport default AppState;","map":null,"metadata":{},"sourceType":"module"}