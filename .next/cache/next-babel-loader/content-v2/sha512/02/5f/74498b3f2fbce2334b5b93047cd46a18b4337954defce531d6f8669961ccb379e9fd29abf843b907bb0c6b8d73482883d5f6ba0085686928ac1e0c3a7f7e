{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\React\\\\NodeSend\\\\client\\\\context\\\\app\\\\appState.js\";\nimport React, { useReducer } from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport clientAxios from '../../config/axios';\nimport { MOSTRAR_ALERTA, LIMPIAR_ALERTA, SUBIENDO_ARCHIVO, SUBIR_ARCHIVO_EXITO, SUBIR_ARCHIVO_ERROR, CREAR_ENLACE_EXITO, AGREGAR_PASSWORD, LIMPIAR_STATE, AGREGAR_DESCARGAS, VISTA_IMAGEN } from '../../types/index';\n\nconst AppState = ({\n  children\n}) => {\n  const initialState = {\n    mensaje_archivo: '',\n    nombre: '',\n    nombre_original: '',\n    cargando: false,\n    descargas: 1,\n    password: '',\n    autor: null,\n    url: '',\n    image: null\n  }; // Crear dispatch y state\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(appReducer, initialState); // Mostrar alerta\n\n  const mostrarAlerta = msg => {\n    dispatch({\n      type: MOSTRAR_ALERTA,\n      payload: msg\n    });\n    setTimeout(() => {\n      dispatch({\n        type: LIMPIAR_ALERTA\n      });\n    }, 3000);\n  }; //Subir archivos al servidor\n\n\n  const subirArchivo = (formData, nombreArchivo) => {\n    dispatch({\n      type: SUBIENDO_ARCHIVO\n    });\n    setTimeout(async () => {\n      try {\n        const respuesta = await clientAxios.post('/api/files', formData);\n        console.log(respuesta);\n        dispatch({\n          type: SUBIR_ARCHIVO_EXITO,\n          payload: {\n            nombre: respuesta.data.archivo,\n            nombre_original: nombreArchivo,\n            image: respuesta.data.image\n          }\n        });\n      } catch (error) {\n        dispatch({\n          type: SUBIR_ARCHIVO_ERROR,\n          payload: error.response.data.msg\n        });\n      }\n    }, 2000);\n  };\n\n  const crearEnlace = async () => {\n    const data = {\n      name: state.nombre,\n      original_name: state.nombre_original,\n      downloads: state.descargas,\n      password: state.password,\n      author: state.autor,\n      image: state.image\n    };\n\n    try {\n      const resultado = await clientAxios.post('/api/links', data);\n      dispatch({\n        type: CREAR_ENLACE_EXITO,\n        payload: resultado.data.msg\n      });\n    } catch (error) {}\n  };\n\n  const limpiarState = () => {\n    dispatch({\n      type: LIMPIAR_STATE\n    });\n  }; // Agregar password\n\n\n  const agregarPassword = password => {\n    dispatch({\n      type: AGREGAR_PASSWORD,\n      payload: password\n    });\n  }; // Agregar descargas\n\n\n  const agregarDescargas = descargas => {\n    dispatch({\n      type: AGREGAR_DESCARGAS,\n      payload: descargas\n    });\n  };\n\n  const agregarImagen = imagen => {\n    dispatch({\n      type: VISTA_IMAGEN,\n      payload: URL.createObjectURL(imagen)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(appContext.Provider, {\n    value: {\n      mensaje_archivo: state.mensaje_archivo,\n      nombre: state.nombre,\n      nombre_original: state.nombre_original,\n      cargando: state.cargando,\n      descargas: state.descargas,\n      password: state.password,\n      autor: state.autor,\n      url: state.url,\n      image: state.image,\n      mostrarAlerta,\n      subirArchivo,\n      crearEnlace,\n      limpiarState,\n      agregarPassword,\n      agregarDescargas,\n      agregarImagen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\nexport default AppState;","map":{"version":3,"sources":["C:/Users/Boris/Desktop/React/NodeSend/client/context/app/appState.js"],"names":["React","useReducer","appContext","appReducer","clientAxios","MOSTRAR_ALERTA","LIMPIAR_ALERTA","SUBIENDO_ARCHIVO","SUBIR_ARCHIVO_EXITO","SUBIR_ARCHIVO_ERROR","CREAR_ENLACE_EXITO","AGREGAR_PASSWORD","LIMPIAR_STATE","AGREGAR_DESCARGAS","VISTA_IMAGEN","AppState","children","initialState","mensaje_archivo","nombre","nombre_original","cargando","descargas","password","autor","url","image","state","dispatch","mostrarAlerta","msg","type","payload","setTimeout","subirArchivo","formData","nombreArchivo","respuesta","post","console","log","data","archivo","error","response","crearEnlace","name","original_name","downloads","author","resultado","limpiarState","agregarPassword","agregarDescargas","agregarImagen","imagen","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport appContext from './appContext';\r\nimport appReducer from './appReducer';\r\nimport clientAxios from '../../config/axios';\r\n\r\nimport {\r\n    MOSTRAR_ALERTA,\r\n    LIMPIAR_ALERTA,\r\n    SUBIENDO_ARCHIVO,\r\n    SUBIR_ARCHIVO_EXITO,\r\n    SUBIR_ARCHIVO_ERROR,\r\n    CREAR_ENLACE_EXITO,\r\n    AGREGAR_PASSWORD,\r\n    LIMPIAR_STATE,\r\n    AGREGAR_DESCARGAS,\r\n    VISTA_IMAGEN\r\n} from '../../types/index';\r\n\r\nconst AppState = ({ children }) => {\r\n\r\n    const initialState = {\r\n        mensaje_archivo: '',\r\n        nombre: '',\r\n        nombre_original: '',\r\n        cargando: false,\r\n        descargas: 1,\r\n        password: '',\r\n        autor: null,\r\n        url: '',\r\n        image: null\r\n    }\r\n\r\n    // Crear dispatch y state\r\n\r\n    const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n    // Mostrar alerta\r\n\r\n    const mostrarAlerta = msg => {\r\n\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: msg\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({ type: LIMPIAR_ALERTA })\r\n        }, 3000);\r\n    }\r\n\r\n    //Subir archivos al servidor\r\n\r\n    const subirArchivo = (formData, nombreArchivo) => {\r\n\r\n        dispatch({\r\n            type: SUBIENDO_ARCHIVO\r\n        })\r\n\r\n        setTimeout(async () => {\r\n            try {\r\n                const respuesta = await clientAxios.post('/api/files', formData);\r\n                console.log(respuesta)\r\n                dispatch({\r\n                    type: SUBIR_ARCHIVO_EXITO,\r\n                    payload: {\r\n                        nombre: respuesta.data.archivo,\r\n                        nombre_original: nombreArchivo,\r\n                        image: respuesta.data.image\r\n                    }\r\n                })\r\n\r\n            } catch (error) {\r\n                dispatch({\r\n                    type: SUBIR_ARCHIVO_ERROR,\r\n                    payload: error.response.data.msg\r\n                })\r\n            }\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    const crearEnlace = async () => {\r\n        const data = {\r\n            name: state.nombre,\r\n            original_name: state.nombre_original,\r\n            downloads: state.descargas,\r\n            password: state.password,\r\n            author: state.autor,\r\n            image: state.image\r\n        }\r\n\r\n        try {\r\n            const resultado = await clientAxios.post('/api/links', data);\r\n            dispatch({\r\n                type: CREAR_ENLACE_EXITO,\r\n                payload: resultado.data.msg\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const limpiarState = () => {\r\n        dispatch({\r\n            type: LIMPIAR_STATE\r\n        })\r\n    }\r\n\r\n    // Agregar password\r\n    const agregarPassword = password => {\r\n        dispatch({\r\n            type: AGREGAR_PASSWORD,\r\n            payload: password\r\n        })\r\n    }\r\n\r\n    // Agregar descargas\r\n    const agregarDescargas = descargas => {\r\n        dispatch({\r\n            type: AGREGAR_DESCARGAS,\r\n            payload: descargas\r\n        })\r\n    }\r\n\r\n    const agregarImagen = imagen => {\r\n        dispatch({\r\n            type: VISTA_IMAGEN,\r\n            payload: URL.createObjectURL(imagen)\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <appContext.Provider\r\n            value={{\r\n                mensaje_archivo: state.mensaje_archivo,\r\n                nombre: state.nombre,\r\n                nombre_original: state.nombre_original,\r\n                cargando: state.cargando,\r\n                descargas: state.descargas,\r\n                password: state.password,\r\n                autor: state.autor,\r\n                url: state.url,\r\n                image: state.image,\r\n                mostrarAlerta,\r\n                subirArchivo,\r\n                crearEnlace,\r\n                limpiarState,\r\n                agregarPassword,\r\n                agregarDescargas,\r\n                agregarImagen\r\n            }}\r\n        >\r\n            {children}\r\n        </appContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppState;"]},"metadata":{},"sourceType":"module"}