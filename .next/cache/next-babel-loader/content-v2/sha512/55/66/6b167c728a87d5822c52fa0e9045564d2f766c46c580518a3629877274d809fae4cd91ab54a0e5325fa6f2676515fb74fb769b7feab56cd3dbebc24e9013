{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\React\\\\NodeSend\\\\client\\\\context\\\\app\\\\appState.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport clientAxios from '../../config/axios';\nimport { MOSTRAR_ALERTA, LIMPIAR_ALERTA, SUBIR_ARCHIVO_EXITO, SUBIR_ARCHIVO_ERROR, CREAR_ENLACE_EXITO, CREAR_ENLACE_ERROR } from '../../types/index';\n\nvar AppState = function AppState(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var initialState = {\n    mensaje_archivo: '',\n    nombre: '',\n    nombre_original: '',\n    cargando: null\n  }; // Crear dispatch y state\n\n  var _useReducer = useReducer(appReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Mostrar alerta\n\n\n  var mostrarAlerta = function mostrarAlerta(msg) {\n    dispatch({\n      type: MOSTRAR_ALERTA,\n      payload: msg\n    });\n    setTimeout(function () {\n      dispatch({\n        type: LIMPIAR_ALERTA\n      });\n    }, 3000);\n  }; //Subir archivos al servidor\n\n\n  var subirArchivo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, nombreArchivo) {\n      var respuesta;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return clientAxios.post('/api/files', formData);\n\n            case 3:\n              respuesta = _context.sent;\n              console.log(respuesta);\n              dispatch({\n                type: SUBIR_ARCHIVO_EXITO,\n                payload: {\n                  nombre: respuesta.data.archivo,\n                  nombre_original: nombreArchivo\n                }\n              });\n              console.log(respuesta.data);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: SUBIR_ARCHIVO_ERROR,\n                payload: _context.t0.response.data.msg\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function subirArchivo(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(appContext.Provider, {\n    value: {\n      mensaje_archivo: state.mensaje_archivo,\n      nombre: state.nombre,\n      nombre_original: state.nombre_original,\n      mostrarAlerta: mostrarAlerta,\n      subirArchivo: subirArchivo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AppState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AppState;\nexport default AppState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppState\");","map":{"version":3,"sources":["C:/Users/Boris/Desktop/React/NodeSend/client/context/app/appState.js"],"names":["React","useReducer","appContext","appReducer","clientAxios","MOSTRAR_ALERTA","LIMPIAR_ALERTA","SUBIR_ARCHIVO_EXITO","SUBIR_ARCHIVO_ERROR","CREAR_ENLACE_EXITO","CREAR_ENLACE_ERROR","AppState","children","initialState","mensaje_archivo","nombre","nombre_original","cargando","state","dispatch","mostrarAlerta","msg","type","payload","setTimeout","subirArchivo","formData","nombreArchivo","post","respuesta","console","log","data","archivo","response"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,mBAHJ,EAIIC,mBAJJ,EAKIC,kBALJ,EAMIC,kBANJ,QAOO,mBAPP;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAE/B,MAAMC,YAAY,GAAG;AACjBC,IAAAA,eAAe,EAAE,EADA;AAEjBC,IAAAA,MAAM,EAAE,EAFS;AAGjBC,IAAAA,eAAe,EAAE,EAHA;AAIjBC,IAAAA,QAAQ,EAAE;AAJO,GAArB,CAF+B,CAS/B;;AAT+B,oBAWLhB,UAAU,CAACE,UAAD,EAAaU,YAAb,CAXL;AAAA,MAWxBK,KAXwB;AAAA,MAWjBC,QAXiB,mBAa/B;;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG,EAAI;AAEzBF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEjB,cADD;AAELkB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,UAAU,CAAC,YAAM;AACbL,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEhB;AAAR,OAAD,CAAR;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAVD,CAf+B,CA2B/B;;;AAEA,MAAMmB,YAAY;AAAA,yEAAG,iBAAOC,QAAP,EAAiBC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGWvB,WAAW,CAACwB,IAAZ,CAAiB,YAAjB,EAA+BF,QAA/B,CAHX;;AAAA;AAGPG,cAAAA,SAHO;AAIbC,cAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAV,cAAAA,QAAQ,CAAC;AACLG,gBAAAA,IAAI,EAAEf,mBADD;AAELgB,gBAAAA,OAAO,EAAE;AACLR,kBAAAA,MAAM,EAAEc,SAAS,CAACG,IAAV,CAAeC,OADlB;AAELjB,kBAAAA,eAAe,EAAEW;AAFZ;AAFJ,eAAD,CAAR;AAOAG,cAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,IAAtB;AAZa;AAAA;;AAAA;AAAA;AAAA;AAcbb,cAAAA,QAAQ,CAAC;AACLG,gBAAAA,IAAI,EAAEd,mBADD;AAELe,gBAAAA,OAAO,EAAE,YAAMW,QAAN,CAAeF,IAAf,CAAoBX;AAFxB,eAAD,CAAR;;AAda;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZI,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAqBA,sBACI,QAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAE;AACHX,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eADpB;AAEHC,MAAAA,MAAM,EAAEG,KAAK,CAACH,MAFX;AAGHC,MAAAA,eAAe,EAAEE,KAAK,CAACF,eAHpB;AAIHI,MAAAA,aAAa,EAAbA,aAJG;AAKHK,MAAAA,YAAY,EAAZA;AALG,KADX;AAAA,cASKb;AATL;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,CA/DD;;GAAMD,Q;;KAAAA,Q;AAiEN,eAAeA,QAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport appContext from './appContext';\r\nimport appReducer from './appReducer';\r\nimport clientAxios from '../../config/axios';\r\n\r\nimport {\r\n    MOSTRAR_ALERTA,\r\n    LIMPIAR_ALERTA,\r\n    SUBIR_ARCHIVO_EXITO,\r\n    SUBIR_ARCHIVO_ERROR,\r\n    CREAR_ENLACE_EXITO,\r\n    CREAR_ENLACE_ERROR\r\n} from '../../types/index';\r\n\r\nconst AppState = ({ children }) => {\r\n\r\n    const initialState = {\r\n        mensaje_archivo: '',\r\n        nombre: '',\r\n        nombre_original: '',\r\n        cargando: null\r\n    }\r\n\r\n    // Crear dispatch y state\r\n\r\n    const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n    // Mostrar alerta\r\n\r\n    const mostrarAlerta = msg => {\r\n\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: msg\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({ type: LIMPIAR_ALERTA })\r\n        }, 3000);\r\n    }\r\n\r\n    //Subir archivos al servidor\r\n\r\n    const subirArchivo = async (formData, nombreArchivo) => {\r\n\r\n        try {\r\n            const respuesta = await clientAxios.post('/api/files', formData);\r\n            console.log(respuesta)\r\n            dispatch({\r\n                type: SUBIR_ARCHIVO_EXITO,\r\n                payload: {\r\n                    nombre: respuesta.data.archivo,\r\n                    nombre_original: nombreArchivo\r\n                }\r\n            })\r\n            console.log(respuesta.data);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: SUBIR_ARCHIVO_ERROR,\r\n                payload: error.response.data.msg\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <appContext.Provider\r\n            value={{\r\n                mensaje_archivo: state.mensaje_archivo,\r\n                nombre: state.nombre,\r\n                nombre_original: state.nombre_original,\r\n                mostrarAlerta,\r\n                subirArchivo\r\n            }}\r\n        >\r\n            {children}\r\n        </appContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppState;"]},"metadata":{},"sourceType":"module"}