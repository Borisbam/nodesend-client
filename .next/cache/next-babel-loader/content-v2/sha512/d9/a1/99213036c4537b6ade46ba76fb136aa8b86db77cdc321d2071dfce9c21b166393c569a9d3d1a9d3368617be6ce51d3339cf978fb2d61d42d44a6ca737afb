{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\React\\\\NodeSend\\\\client\\\\components\\\\Dropzone.js\";\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport clientAxios from '../config/axios';\n\nconst Dropzone = () => {\n  const onDrop = useCallback(async acceptedFiles => {\n    // Crea un form-data\n    const formData = new FormData();\n    formData.append('file', acceptedFiles[0]);\n    const resultado = await clientAxios.post('/api/files', formData);\n    console.log(resultado.data);\n  }, []); // Extraer contenido de dropzone\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    acceptedFiles\n  } = useDropzone({\n    onDrop\n  });\n  const archivos = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"bg-white flex-1 p-3 mb-4 shadow-lg rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-bold text-xl\",\n      children: file.path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-500 mt-2\",\n      children: [(file.size / Math.pow(1024, 2)).toFixed(2), \" MB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, file.lastModified, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"md:flex-1 mb-3 mx-2 mt-16 lg:mt-0 flex flex-col items-center justify-center border-dashed border-gray-400 border-2 bg-gray-100 px-4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["C:/Users/Boris/Desktop/React/NodeSend/client/components/Dropzone.js"],"names":["React","useState","useCallback","useDropzone","clientAxios","Dropzone","onDrop","acceptedFiles","formData","FormData","append","resultado","post","console","log","data","getRootProps","getInputProps","isDragActive","archivos","map","file","path","size","Math","pow","toFixed","lastModified"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAMC,MAAM,GAAGJ,WAAW,CAAC,MAAOK,aAAP,IAAyB;AAGhD;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,aAAa,CAAC,CAAD,CAArC;AAEA,UAAMI,SAAS,GAAG,MAAMP,WAAW,CAACQ,IAAZ,CAAiB,YAAjB,EAA+BJ,QAA/B,CAAxB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,IAAtB;AACH,GATyB,EASvB,EATuB,CAA1B,CAFmB,CAanB;;AAEA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA,YAA/B;AAA6CX,IAAAA;AAA7C,MAA+DJ,WAAW,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAhF;AAEA,QAAMa,QAAQ,GAAGZ,aAAa,CAACa,GAAd,CAAkBC,IAAI,iBACnC;AACI,IAAA,SAAS,EAAC,4CADd;AAAA,4BAGI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA,gBAAkCA,IAAI,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAG,MAAA,SAAS,EAAC,4BAAb;AAAA,iBAA2C,CAACD,IAAI,CAACE,IAAL,GAAYC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAb,EAAgCC,OAAhC,CAAwC,CAAxC,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,KAESL,IAAI,CAACM,YAFd;AAAA;AAAA;AAAA;AAAA,UADa,CAAjB;AASA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhCD;;AAkCA,eAAetB,QAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport clientAxios from '../config/axios';\r\n\r\nconst Dropzone = () => {\r\n\r\n    const onDrop = useCallback(async (acceptedFiles) => {\r\n\r\n\r\n        // Crea un form-data\r\n        const formData = new FormData();\r\n        formData.append('file', acceptedFiles[0]);\r\n\r\n        const resultado = await clientAxios.post('/api/files', formData);\r\n        console.log(resultado.data);\r\n    }, []);\r\n\r\n    // Extraer contenido de dropzone\r\n\r\n    const { getRootProps, getInputProps, isDragActive, acceptedFiles } = useDropzone({ onDrop });\r\n\r\n    const archivos = acceptedFiles.map(file => (\r\n        <li\r\n            className='bg-white flex-1 p-3 mb-4 shadow-lg rounded'\r\n            key={file.lastModified}>\r\n            <p className='font-bold text-xl'>{file.path}</p>\r\n            <p className='text-xl text-gray-500 mt-2'>{(file.size / Math.pow(1024, 2)).toFixed(2)} MB</p>\r\n        </li>\r\n    ))\r\n\r\n    return (\r\n        <div className='md:flex-1 mb-3 mx-2 mt-16 lg:mt-0 flex flex-col items-center justify-center border-dashed border-gray-400 border-2 bg-gray-100 px-4'>\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dropzone;\r\n"]},"metadata":{},"sourceType":"module"}