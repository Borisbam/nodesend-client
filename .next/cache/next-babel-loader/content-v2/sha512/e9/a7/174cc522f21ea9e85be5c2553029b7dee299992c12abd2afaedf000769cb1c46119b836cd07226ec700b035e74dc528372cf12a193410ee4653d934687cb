{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\React\\\\NodeSend\\\\client\\\\context\\\\app\\\\appState.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport clientAxios from '../../config/axios';\nimport { MOSTRAR_ALERTA, LIMPIAR_ALERTA, SUBIENDO_ARCHIVO, SUBIR_ARCHIVO_EXITO, SUBIR_ARCHIVO_ERROR, CREAR_ENLACE_EXITO, AGREGAR_PASSWORD, LIMPIAR_STATE, AGREGAR_DESCARGAS, VISTA_IMAGEN } from '../../types/index';\n\nvar AppState = function AppState(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var initialState = {\n    mensaje_archivo: '',\n    nombre: '',\n    nombre_original: '',\n    cargando: false,\n    descargas: 1,\n    password: '',\n    autor: null,\n    url: '',\n    image: null\n  }; // Crear dispatch y state\n\n  var _useReducer = useReducer(appReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Mostrar alerta\n\n\n  var mostrarAlerta = function mostrarAlerta(msg) {\n    dispatch({\n      type: MOSTRAR_ALERTA,\n      payload: msg\n    });\n    setTimeout(function () {\n      dispatch({\n        type: LIMPIAR_ALERTA\n      });\n    }, 3000);\n  }; //Subir archivos al servidor\n\n\n  var subirArchivo = function subirArchivo(formData, nombreArchivo) {\n    dispatch({\n      type: SUBIENDO_ARCHIVO\n    });\n    setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var respuesta;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return clientAxios.post('/api/files', formData);\n\n            case 3:\n              respuesta = _context.sent;\n              dispatch({\n                type: SUBIR_ARCHIVO_EXITO,\n                payload: {\n                  nombre: respuesta.data.archivo,\n                  nombre_original: nombreArchivo,\n                  image: respuesta.data.image\n                }\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: SUBIR_ARCHIVO_ERROR,\n                payload: _context.t0.response.data.msg\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    })), 2000);\n  };\n\n  var crearEnlace = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data, resultado;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = {\n                name: state.nombre,\n                original_name: state.nombre_original,\n                downloads: state.descargas,\n                password: state.password,\n                author: state.autor,\n                image: state.image\n              };\n              _context2.prev = 1;\n              _context2.next = 4;\n              return clientAxios.post('/api/links', data);\n\n            case 4:\n              resultado = _context2.sent;\n              dispatch({\n                type: CREAR_ENLACE_EXITO,\n                payload: resultado.data.msg\n              });\n              _context2.next = 10;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function crearEnlace() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var limpiarState = function limpiarState() {\n    dispatch({\n      type: LIMPIAR_STATE\n    });\n  }; // Agregar password\n\n\n  var agregarPassword = function agregarPassword(password) {\n    dispatch({\n      type: AGREGAR_PASSWORD,\n      payload: password\n    });\n  }; // Agregar descargas\n\n\n  var agregarDescargas = function agregarDescargas(descargas) {\n    dispatch({\n      type: AGREGAR_DESCARGAS,\n      payload: descargas\n    });\n  };\n\n  var agregarImagen = function agregarImagen(imagen) {\n    dispatch({\n      type: VISTA_IMAGEN,\n      payload: URL.createObjectURL(imagen)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(appContext.Provider, {\n    value: {\n      mensaje_archivo: state.mensaje_archivo,\n      nombre: state.nombre,\n      nombre_original: state.nombre_original,\n      cargando: state.cargando,\n      descargas: state.descargas,\n      password: state.password,\n      autor: state.autor,\n      url: state.url,\n      image: state.image,\n      mostrarAlerta: mostrarAlerta,\n      subirArchivo: subirArchivo,\n      crearEnlace: crearEnlace,\n      limpiarState: limpiarState,\n      agregarPassword: agregarPassword,\n      agregarDescargas: agregarDescargas,\n      agregarImagen: agregarImagen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AppState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AppState;\nexport default AppState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppState\");","map":{"version":3,"sources":["C:/Users/Boris/Desktop/React/NodeSend/client/context/app/appState.js"],"names":["React","useReducer","appContext","appReducer","clientAxios","MOSTRAR_ALERTA","LIMPIAR_ALERTA","SUBIENDO_ARCHIVO","SUBIR_ARCHIVO_EXITO","SUBIR_ARCHIVO_ERROR","CREAR_ENLACE_EXITO","AGREGAR_PASSWORD","LIMPIAR_STATE","AGREGAR_DESCARGAS","VISTA_IMAGEN","AppState","children","initialState","mensaje_archivo","nombre","nombre_original","cargando","descargas","password","autor","url","image","state","dispatch","mostrarAlerta","msg","type","payload","setTimeout","subirArchivo","formData","nombreArchivo","post","respuesta","data","archivo","response","crearEnlace","name","original_name","downloads","author","resultado","limpiarState","agregarPassword","agregarDescargas","agregarImagen","imagen","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport appContext from './appContext';\r\nimport appReducer from './appReducer';\r\nimport clientAxios from '../../config/axios';\r\n\r\nimport {\r\n    MOSTRAR_ALERTA,\r\n    LIMPIAR_ALERTA,\r\n    SUBIENDO_ARCHIVO,\r\n    SUBIR_ARCHIVO_EXITO,\r\n    SUBIR_ARCHIVO_ERROR,\r\n    CREAR_ENLACE_EXITO,\r\n    AGREGAR_PASSWORD,\r\n    LIMPIAR_STATE,\r\n    AGREGAR_DESCARGAS,\r\n    VISTA_IMAGEN\r\n} from '../../types/index';\r\n\r\nconst AppState = ({ children }) => {\r\n\r\n    const initialState = {\r\n        mensaje_archivo: '',\r\n        nombre: '',\r\n        nombre_original: '',\r\n        cargando: false,\r\n        descargas: 1,\r\n        password: '',\r\n        autor: null,\r\n        url: '',\r\n        image: null\r\n    }\r\n\r\n    // Crear dispatch y state\r\n\r\n    const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n    // Mostrar alerta\r\n\r\n    const mostrarAlerta = msg => {\r\n\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: msg\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({ type: LIMPIAR_ALERTA })\r\n        }, 3000);\r\n    }\r\n\r\n    //Subir archivos al servidor\r\n\r\n    const subirArchivo = (formData, nombreArchivo) => {\r\n\r\n        dispatch({\r\n            type: SUBIENDO_ARCHIVO\r\n        })\r\n\r\n        setTimeout(async () => {\r\n            try {\r\n                const respuesta = await clientAxios.post('/api/files', formData);\r\n                dispatch({\r\n                    type: SUBIR_ARCHIVO_EXITO,\r\n                    payload: {\r\n                        nombre: respuesta.data.archivo,\r\n                        nombre_original: nombreArchivo,\r\n                        image: respuesta.data.image\r\n                    }\r\n                })\r\n\r\n            } catch (error) {\r\n                dispatch({\r\n                    type: SUBIR_ARCHIVO_ERROR,\r\n                    payload: error.response.data.msg\r\n                })\r\n            }\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    const crearEnlace = async () => {\r\n        const data = {\r\n            name: state.nombre,\r\n            original_name: state.nombre_original,\r\n            downloads: state.descargas,\r\n            password: state.password,\r\n            author: state.autor,\r\n            image: state.image\r\n        }\r\n\r\n        try {\r\n            const resultado = await clientAxios.post('/api/links', data);\r\n            dispatch({\r\n                type: CREAR_ENLACE_EXITO,\r\n                payload: resultado.data.msg\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const limpiarState = () => {\r\n        dispatch({\r\n            type: LIMPIAR_STATE\r\n        })\r\n    }\r\n\r\n    // Agregar password\r\n    const agregarPassword = password => {\r\n        dispatch({\r\n            type: AGREGAR_PASSWORD,\r\n            payload: password\r\n        })\r\n    }\r\n\r\n    // Agregar descargas\r\n    const agregarDescargas = descargas => {\r\n        dispatch({\r\n            type: AGREGAR_DESCARGAS,\r\n            payload: descargas\r\n        })\r\n    }\r\n\r\n    const agregarImagen = imagen => {\r\n        dispatch({\r\n            type: VISTA_IMAGEN,\r\n            payload: URL.createObjectURL(imagen)\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <appContext.Provider\r\n            value={{\r\n                mensaje_archivo: state.mensaje_archivo,\r\n                nombre: state.nombre,\r\n                nombre_original: state.nombre_original,\r\n                cargando: state.cargando,\r\n                descargas: state.descargas,\r\n                password: state.password,\r\n                autor: state.autor,\r\n                url: state.url,\r\n                image: state.image,\r\n                mostrarAlerta,\r\n                subirArchivo,\r\n                crearEnlace,\r\n                limpiarState,\r\n                agregarPassword,\r\n                agregarDescargas,\r\n                agregarImagen\r\n            }}\r\n        >\r\n            {children}\r\n        </appContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppState;"]},"metadata":{},"sourceType":"module"}