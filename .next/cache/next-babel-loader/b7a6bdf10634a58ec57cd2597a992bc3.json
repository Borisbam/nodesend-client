{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cursos\\\\React\\\\NodeSend\\\\client\\\\components\\\\Dropzone.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useContext, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport clientAxios from '../config/axios';\nimport Loader from 'react-loader-spinner';\nimport appContext from '../context/app/appContext';\nimport authContext from '../context/auth/authContext';\nimport Formulario from './Formulario';\nimport { VISTA_IMAGEN } from '../types/index';\n\nconst Dropzone = () => {\n  //Auth Context\n  const AuthContext = useContext(authContext);\n  const {\n    autenticado\n  } = AuthContext; //App Context\n\n  const AppContext = useContext(appContext);\n  const {\n    image,\n    cargando,\n    mostrarAlerta,\n    subirArchivo,\n    crearEnlace\n  } = AppContext;\n  const {\n    0: imagen,\n    1: setImagen\n  } = useState();\n\n  const onDropRejected = () => {\n    mostrarAlerta('El lÃ­mite es de 1MB, crea una cuenta');\n  };\n\n  const onDropAccepted = useCallback(async acceptedFiles => {\n    setImagen(URL.createObjectURL(acceptedFiles[0]));\n    const image = [URL.createObjectURL(acceptedFiles[0])]; // Crea un form-data\n\n    const formData = new FormData();\n    formData.append('file', acceptedFiles[0]);\n    formData.append('image', image[0]);\n    subirArchivo(formData, acceptedFiles[0].path);\n  }, []); // Extraer contenido de dropzone\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    acceptedFiles\n  } = useDropzone({\n    onDropAccepted,\n    onDropRejected,\n    maxSize: 5000000\n  });\n  const archivos = acceptedFiles.map(file => __jsx(\"li\", {\n    className: \"bg-white flex-1 p-3 mb-4 shadow-lg rounded\",\n    key: file.lastModified,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: imagen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    className: \"font-bold text-xl break-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, file.path), __jsx(\"p\", {\n    className: \"text-xl text-gray-500 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, (file.size / Math.pow(1024, 2)).toFixed(2), \" MB\")));\n  return __jsx(\"div\", {\n    className: \"md:flex-1 mb-3 mx-2 mt-16 lg:mt-0 flex flex-col items-center justify-center border-dashed border-gray-400 border-2 bg-gray-100 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, acceptedFiles.length > 0 ? __jsx(\"div\", {\n    className: \"mt-10 w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    className: \"text-2xl font-bold text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Archivos\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, archivos), autenticado ? __jsx(Formulario, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }) : null, cargando ? __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 34\n    }\n  }, __jsx(Loader, {\n    type: \"Oval\",\n    color: \"Blue\",\n    size: 10,\n    className: \"my-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 71\n    }\n  })) : __jsx(\"button\", {\n    type: \"button\",\n    className: \"bg-blue-700 w-full py-3 rounded-lg text-white my-10 hover:bg-blue-800\",\n    onClick: () => {\n      crearEnlace();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 143\n    }\n  }, \"Crear Enlace\")) : __jsx(\"div\", _extends({}, getRootProps({\n    className: 'dropzone w-full py-32'\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", _extends({\n    className: \"h-100\"\n  }, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  })), isDragActive ? __jsx(\"p\", {\n    className: \"text-2xl text-center text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, \"Suelta el archivo\") : __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"text-2xl text-center text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, \"Arrastra un archivo aqu\\xED\"), __jsx(\"button\", {\n    className: \"bg-blue-700 w-full py-3 rounded-lg text-white my-10 hover:bg-blue-800\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, \"Selecciona archivos para subir\"))));\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["E:/Cursos/React/NodeSend/client/components/Dropzone.js"],"names":["React","useCallback","useContext","useState","useDropzone","clientAxios","Loader","appContext","authContext","Formulario","VISTA_IMAGEN","Dropzone","AuthContext","autenticado","AppContext","image","cargando","mostrarAlerta","subirArchivo","crearEnlace","imagen","setImagen","onDropRejected","onDropAccepted","acceptedFiles","URL","createObjectURL","formData","FormData","append","path","getRootProps","getInputProps","isDragActive","maxSize","archivos","map","file","lastModified","size","Math","pow","toFixed","length","className"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport clientAxios from '../config/axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport appContext from '../context/app/appContext';\r\nimport authContext from '../context/auth/authContext';\r\nimport Formulario from './Formulario';\r\nimport {\r\n    VISTA_IMAGEN\r\n} from '../types/index';\r\n\r\nconst Dropzone = () => {\r\n\r\n\r\n    //Auth Context\r\n\r\n    const AuthContext = useContext(authContext);\r\n    const { autenticado } = AuthContext;\r\n\r\n    //App Context\r\n\r\n    const AppContext = useContext(appContext);\r\n    const { image, cargando, mostrarAlerta, subirArchivo, crearEnlace } = AppContext;\r\n\r\n      \r\n    const [imagen, setImagen] = useState();\r\n\r\n    const onDropRejected = () => {\r\n        mostrarAlerta('El lÃ­mite es de 1MB, crea una cuenta');\r\n    }\r\n\r\n    const onDropAccepted = useCallback(async (acceptedFiles) => {\r\n\r\n        \r\n          \r\n        setImagen(URL.createObjectURL(acceptedFiles[0]));\r\n        const image = [URL.createObjectURL(acceptedFiles[0])];\r\n        // Crea un form-data\r\n        const formData = new FormData();\r\n        formData.append('file', acceptedFiles[0]);\r\n        formData.append('image', image[0]);\r\n        subirArchivo(formData, acceptedFiles[0].path);\r\n    }, []);\r\n    \r\n    // Extraer contenido de dropzone\r\n\r\n    const { getRootProps, getInputProps, isDragActive, acceptedFiles } = useDropzone({ onDropAccepted, onDropRejected, maxSize: 5000000 });\r\n\r\n    const archivos = acceptedFiles.map(file => (\r\n        <li\r\n            className='bg-white flex-1 p-3 mb-4 shadow-lg rounded'\r\n            key={file.lastModified}>\r\n            <img src={imagen} />\r\n            <p className='font-bold text-xl break-all'>{file.path}</p>\r\n            <p className='text-xl text-gray-500 mt-2'>{(file.size / Math.pow(1024, 2)).toFixed(2)} MB</p>\r\n        </li>\r\n    ));\r\n    \r\n    return (\r\n        <div className='md:flex-1 mb-3 mx-2 mt-16 lg:mt-0 flex flex-col items-center justify-center border-dashed border-gray-400 border-2 bg-gray-100 px-4'>\r\n            { acceptedFiles.length > 0 ? (\r\n                <div className='mt-10 w-full'>\r\n                    <h4 className='text-2xl font-bold text-center mb-4'>Archivos</h4>\r\n                    <ul>\r\n                        {archivos}\r\n                    </ul>\r\n\r\n                    {\r\n                        autenticado ? (\r\n                            <Formulario />\r\n                        ) : null\r\n                    }\r\n                    { cargando ? <div className='flex justify-center'><Loader type='Oval' color='Blue' size={10} className='my-10' /></div> : <button\r\n                        type='button'\r\n                        className='bg-blue-700 w-full py-3 rounded-lg text-white my-10 hover:bg-blue-800'\r\n                        onClick={() => { crearEnlace() }}\r\n                    >\r\n                        Crear Enlace\r\n                    </button>}\r\n\r\n                </div>\r\n\r\n            ) : (\r\n                    <div\r\n                        {...getRootProps({ className: 'dropzone w-full py-32' })}\r\n                    >\r\n                        <input className='h-100' {...getInputProps()} />\r\n                        {isDragActive ? (\r\n                            <p className='text-2xl text-center text-gray-600'>\r\n                                Suelta el archivo\r\n                            </p>\r\n                        )\r\n                            : (\r\n                                <div className='text-center'>\r\n\r\n                                    <p className='text-2xl text-center text-gray-600'>\r\n                                        Arrastra un archivo aquÃ­\r\n                            </p>\r\n                                    <button\r\n                                        className='bg-blue-700 w-full py-3 rounded-lg text-white my-10 hover:bg-blue-800'\r\n                                        type='button'>\r\n                                        Selecciona archivos para subir\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n\r\n                    </div>\r\n                )}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dropzone;\r\n"]},"metadata":{},"sourceType":"module"}