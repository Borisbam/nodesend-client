{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport Layout from '../../components/Layout';\nimport clientAxios from '../../config/axios';\nimport appContext from '../../context/app/appContext';\nimport authContext from '../../context/auth/authContext';\nimport Alerta from '../../components/Alerta';\nexport async function getServerSideProps({\n  params\n}) {\n  const {\n    link\n  } = params;\n  const resultado = await clientAxios.get(`/api/links/${link}`);\n  return {\n    props: {\n      link: resultado.data\n    }\n  };\n}\nexport async function getServerSidePaths() {\n  const links = await clientAxios.get('/api/links/');\n  return {\n    paths: links.data.links.map(link => ({\n      params: {\n        link: link.url\n      }\n    })),\n    fallback: false\n  };\n}\n\nconst Link = ({\n  link\n}) => {\n  const AppContext = useContext(appContext);\n  const {\n    mensaje_archivo,\n    mostrarAlerta\n  } = AppContext;\n  const AuthContext = useContext(authContext);\n  const {\n    token,\n    usuarioAutenticado\n  } = AuthContext;\n  const {\n    0: tienePassword,\n    1: setTienePassword\n  } = useState(link.password);\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: fileLink,\n    1: setFileLink\n  } = useState(link.file);\n  const {\n    0: file,\n    1: setFile\n  } = useState({\n    original_name: '',\n    image: ''\n  });\n\n  const verificarPassword = async e => {\n    e.preventDefault();\n    const data = {\n      password\n    };\n\n    try {\n      const resultado = await clientAxios.post(`/api/links/${link.link}`, data);\n      setTienePassword(resultado.data.password);\n      setFileLink(resultado.data.file);\n    } catch (error) {\n      mostrarAlerta(error.response.data.msg);\n    }\n  };\n\n  useEffect(() => {\n    if (token) {\n      usuarioAutenticado();\n    }\n  }, [token]);\n  return __jsx(Layout, null, tienePassword ? __jsx(React.Fragment, null, mensaje_archivo && __jsx(Alerta, null), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\"\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\"\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: e => verificarPassword(e)\n  }, __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"password\"\n  }, \"Ingresa la contrase\\xF1a del archivo\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\"\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-red-500 hover:bg-gray-900 w-full p-2 text-white uppercase font-bold\\r mt-2\",\n    value: \"Validar Password\"\n  })))))) : __jsx(React.Fragment, null, __jsx(\"img\", {\n    src: link.image,\n    className: \"mx-auto\"\n  }), __jsx(\"h1\", {\n    className: \"mt-5 text-4xl text-center text-gray-700 break-all\"\n  }, link.original_name, \" \"), __jsx(\"div\", {\n    className: \"flex items-center justify-center mt-10\"\n  }, __jsx(\"a\", {\n    href: `${process.env.backendURL}/api/files/${fileLink}`,\n    className: \"bg-red-500 text-center px-10 py-3 rounded uppercase font-bold text-white cursor-pointer\",\n    download: true\n  }, \"Descargar\"))));\n};\n\nexport default Link;","map":null,"metadata":{},"sourceType":"module"}